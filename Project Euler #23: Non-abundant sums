import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
 static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static String line;
     static  int n,k,T,N;
    static StringTokenizer st;
    static Scanner in = new Scanner(System.in);
    static char [] word;
    public static void main(String[] args) throws IOException {
        //generating prime numer
        ArrayList<Integer> primes = new ArrayList<>();
        int size = 1000001;
        BitSet set = new BitSet(size);
        for (long i=2;i<=size;i++){
            if (!set.get((int) i)){
                for (long j=i*i;j<=size;j+=i){
                    set.set((int)j,true);
                }
                primes.add((int) i);
            }
        }
        ArrayList<Integer> abduntantNumber  = new ArrayList<>();
       //prime facotoiazation
        for (int i=12;i<=28123;i++){
            int sum = 1;
            //prime factorization
            int PFIndex =0;
            int N = i;
            while (N!=0&&N!=1){
                int power = 0;
                if (N % primes.get(PFIndex) == 0){
                   while (N!=0&&N%primes.get(PFIndex)==0){
                       power++;
                       N/=primes.get(PFIndex);
                   }
                }
                if (power!=0) {//pw.println(Math.pow(primes.get(PFIndex), power ));
                    sum *= ((Math.pow(primes.get(PFIndex), power+1 ) - 1) / (primes.get(PFIndex) - 1));
                }
                PFIndex++;
            }
            //pw.println(sum+" "+i);
           if (sum-i>i)
               abduntantNumber.add(i);
        }
        HashSet<Integer> sumOfTwoAbdutantNumber = new HashSet<>();
        for (int i=0;i<abduntantNumber.size();i++)
            for (int k=i;k<abduntantNumber.size();k++)
                sumOfTwoAbdutantNumber.add(abduntantNumber.get(i)+abduntantNumber.get(k));
    N = Integer.parseInt(br.readLine());
    while(N-->0){
        k = Integer.parseInt(br.readLine());
        if(sumOfTwoAbdutantNumber.contains(k))
        pw.println("YES");
        else if(k>28123 )
        pw.println("YES");
        else
        pw.println("NO");
    }
    pw.flush();

    }
}
